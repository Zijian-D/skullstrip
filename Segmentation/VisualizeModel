import tensorflow as tf
import nibabel as nib
import keras
import numpy as np
import keyboard
import matplotlib.pyplot as plt


def dice_metric(y_true, y_pred):

    threshold = 0.5

    mask = y_pred > threshold
    mask = tf.cast(mask, dtype=tf.float32)
    y_pred = tf.multiply(y_pred, mask)
    mask = y_true > threshold
    mask = tf.cast(mask, dtype=tf.float32)
    y_true = tf.multiply(y_true, mask)
    # y_pred = tf.cast(y_pred > threshold, dtype=tf.float32)
    # y_true = tf.cast(y_true > threshold, dtype=tf.float32)

    inse = tf.reduce_sum(tf.multiply(y_pred, y_true))
    l = tf.reduce_sum(y_pred)
    r = tf.reduce_sum(y_true)

    # new haodong
    hard_dice = (2. * inse) / (l + r)

    hard_dice = tf.reduce_mean(hard_dice)

    return hard_dice


def fill(arrayData, arrayTruth, data, truth, start):
    for x in range(start, len(data[0])-1, 1):
        arrayData = np.append(arrayData, [data[0:148, x:x+1]], axis=0)
        arrayTruth = np.append(arrayTruth, [truth[0:148, x:x+1]], axis=0)
    print("File Loaded")
    return arrayData, arrayTruth


def load(imagePath, maskPath, arrayData='Null', arrayTruth='Null'):
    image = nib.load(imagePath)
    data = image.get_fdata()
    mask = nib.load(maskPath)
    truth = mask.get_fdata()
    if arrayData == 'Null':
        arrayData = np.array([data[0:148, 0:1]])
        arrayTruth = np.array([truth[0:148, 0:1]])
        arrayData, arrayTruth = fill(arrayData, arrayTruth, data, truth, 1)
        return arrayData, arrayTruth
    else:
        arrayData, arrayTruth = fill(arrayData, arrayTruth, data, truth, 0)
        return arrayData, arrayTruth


def display(data, model):

    model.save('myModel')
    predictions = model.predict(data[3:4])
    predictions = np.round(predictions)

    plt.ion()
    plt.axis('off')
    plt.figure(0)

    print(len(predictions[0][0][0]))

    plt.imshow(data[3, :, :, 0], cmap='gray')
    plt.imshow(predictions[0, :, :, 0], alpha=0.2)
    plt.draw()
    plt.pause(0.01)

    x = 0
    View = 0

    while True:
        if View == 0:
            if x > len(data[3, 0, 0]) - 1:
                x = len(data[3, 0, 0]) - 1
            plt.clf()
            plt.imshow(data[3, :, :, x], cmap='gray')
            plt.imshow(predictions[0, :, :, x], alpha=0.2)
            plt.axis('off')
            plt.draw()
            plt.pause(0.01)
        if View == 1:
            if x > len(data[3][0]) - 1:
                x = len(predictions[0][0]) - 1
            plt.clf()
            plt.imshow(data[3, :, x, :], cmap='gray')
            plt.imshow(predictions[0, :, x, :], alpha=0.2)
            plt.axis('off')
            plt.draw()
            plt.pause(0.01)
        if View == 2:
            if x > len(data[0]) - 1:
                x = len(predictions[0]) - 1
            plt.clf()
            plt.imshow(data[3, x, :, :], cmap='gray')
            plt.imshow(predictions[0, x, :, :], alpha=0.2)
            plt.axis('off')
            plt.draw()
            plt.pause(0.01)

        if keyboard.read_key() == "t":
            x += 1
            print(x)
        elif keyboard.read_key() == "g":
            x -= 1
            print(x)
        elif keyboard.read_key() == "w":
            View = 0
        elif keyboard.read_key() == "e":
            View = 1
        elif keyboard.read_key() == "r":
            View = 2
        elif keyboard.read_key() == "y":
            break
        if x < 0:
            x = 0


def main():
    input_layer = keras.layers.Input(shape=(148, 100, 1))
    conv1a = keras.layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', padding='same')(input_layer)
    conv1b = keras.layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', padding='same')(conv1a)
    pool1 = keras.layers.MaxPool2D(pool_size=(2, 2))(conv1b)
    conv2a = keras.layers.Conv2D(filters=64, kernel_size=(3, 3), activation='relu', padding='same')(pool1)
    conv2b = keras.layers.Conv2D(filters=64, kernel_size=(3, 3), activation='relu', padding='same')(conv2a)
    pool2 = keras.layers.MaxPool2D(pool_size=(2, 2))(conv2b)
    conv3a = keras.layers.Conv2D(filters=96, kernel_size=(3, 3), activation='relu', padding='same')(pool2)
    conv3b = keras.layers.Conv2D(filters=96, kernel_size=(3, 3), activation='relu', padding='same')(conv3a)

    dconv3a = keras.layers.Conv2DTranspose(filters=96, kernel_size=(3, 3), padding='same')(conv3b)
    dconv3b = keras.layers.Conv2DTranspose(filters=96, kernel_size=(3, 3), padding='same')(dconv3a)
    unpool2 = keras.layers.UpSampling2D(size=(2, 2))(dconv3b)
    cat2 = keras.layers.concatenate([conv2b, unpool2])
    dconv2a = keras.layers.Conv2DTranspose(filters=64, kernel_size=(3, 3), padding='same')(cat2)
    dconv2b = keras.layers.Conv2DTranspose(filters=64, kernel_size=(3, 3), padding='same')(dconv2a)
    unpool1 = keras.layers.UpSampling2D(size=(2, 2))(dconv2b)
    cat1 = keras.layers.concatenate([conv1b, unpool1])
    dconv1a = keras.layers.Conv2DTranspose(filters=32, kernel_size=(3, 3), padding='same')(cat1)
    dconv1b = keras.layers.Conv2DTranspose(filters=32, kernel_size=(3, 3), padding='same')(dconv1a)

    output = keras.layers.Conv2D(filters=1, kernel_size=(3, 3), activation='sigmoid', padding='same')(dconv1b)

    model = keras.models.Model(inputs=input_layer, output=output)
    opt = keras.optimizers.Adam()
    model.compile(optimizer=opt, loss='binary_crossentropy', metrics=[keras.metrics.binary_accuracy, dice_metric])

    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_1_B50013_5_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_1_B50013_5_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz')
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_2_B50013_5_19_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_2_B50013_5_19_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_3_B50017_2_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_3_B50017_2_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_4_B50017_2_1_12_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_4_B50017_2_1_12_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_5_B50018_2_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_5_B50018_2_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_6_B50018_16_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_6_B50018_16_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_7_B50018_23_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_7_B50018_23_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190715_8_B50018_29_1_T1_RARE_MEMRI_apoe_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190715_8_B50018_29_1_T1_RARE_MEMRI_apoe_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190909_11_B50013_31_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190909_11_B50013_31_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190909_12_B50013_42_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190909_12_B50013_42_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_190909_13_B50013_60_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_190909_13_B50013_60_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191028_3_B50022_3_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191028_3_B50022_3_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191028_4_B50022_24_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191028_4_B50022_24_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191028_5_B50022_31_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191028_5_B50022_31_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191028_6_B50022_40_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191028_6_B50022_40_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191028_7_B50022_44_1_T1_RARE_MEMRI_apoe100um_roomtemp.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191028_7_B50022_44_1_T1_RARE_MEMRI_apoe100um_roomtemp_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_1_B50027_15_1_T1_RARE_MEMRI_exercise.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_1_B50027_15_1_T1_RARE_MEMRI_exercise_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_1_B50030_52_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_1_B50030_52_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_2_B50028_3_1_T1_RARE_MEMRI_exercise.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_2_B50028_3_1_T1_RARE_MEMRI_exercise_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_2_B50028_45_1_T1_RARE_MEMRI_exercise.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_2_B50028_45_1_T1_RARE_MEMRI_exercise_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_2_B50030_53_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_2_B50030_53_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_3_B50030_62_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_3_B50030_62_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_4_B50030_14_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_4_B50030_14_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_5_B50030_46_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_5_B50030_46_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_6_11_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_6_11_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_8_33_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_8_33_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_9_50_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_9_50_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191205_10_63_1_T1_RARE_MEMRI_apoe.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191205_10_63_1_T1_RARE_MEMRI_apoe_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_1_21_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_1_21_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_3_34_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_3_34_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_4_58_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_4_58_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_5_74_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_5_74_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_6_90_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_6_90_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_7_99_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_7_99_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_8_115_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_8_115_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)
    arrayData, arrayTruth = load(
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Animal_191212_9_127_1_T1_RARE_MEMRI_22mins.nii.gz',
        'C:/Users/adamc/PycharmProjects/Modeling/RARE/Masks/Animal_191212_9_127_1_T1_RARE_MEMRI_22mins_mask.nii.gz',
        arrayData, arrayTruth)

    arrayData = np.rot90(arrayData, axes=(2, 3))
    arrayTruth = np.rot90(arrayTruth, axes=(2, 3))
    history = model.fit(arrayData, arrayTruth, epochs=50, batch_size=50)

    print(history.history['loss'])

    # xvals = np.arange(600)
    # plt.figure(1)
    # plt.plot(xvals, history.history['binary_accuracy'])
    # plt.savefig('plotA.png')
    # np.savetxt("BA.csv", history.history['binary_accuracy'], delimiter=",")

    # plt.figure(1)
    # plt.plot(xvals, history.history['loss'])
    # plt.savefig('plotL.png')
    # np.savetxt("L.csv", history.history['loss'], delimiter=",")

    # plt.figure(1)
    # plt.plot(xvals, history.history['dice_metric'])
    # plt.savefig('plotM.png')
    # np.savetxt("M.csv", history.history['dice_metric'], delimiter=",")

    display(arrayData, model)


if __name__ == "__main__":
    main()
